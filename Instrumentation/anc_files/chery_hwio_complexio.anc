/******************************************************************************/
/*                                                                            */
/* Filename:          chery_hwio_interface.anc                                */
/*                                                                            */
/* Description:       Private ancillary definitions file                      */
/*                    for dd_atd.                                             */
/*                                                                            */
/* Global Functions Defined:                                                  */
/*                    None                                                    */
/* Static Functions Defined:                                                  */
/*                    None                                                    */
/* Inline Functions Defined:                                                  */
/*                    None                                                    */
/*                                                                            */
/* Forward Engine Management Systems                                          */
/*                                                                            */
/* Copyright 2004, Delphi Technologies, Inc.                                  */
/* All rights reserved.                                                       */
/*                                                                            */
/******************************************************************************/

*-dd_cam.CAM_Edge_Data[0]{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "haha1";
*-  variable_location.symbol = dd_cam.CAM_Edge_Data[0];
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "0.023437500000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "cam inlet phase";
*-}

*-dd_cam.CAM_Edge_Data[1]{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "haha2";
*-  variable_location.symbol = dd_cam.CAM_Edge_Data[1];
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "0.023437500000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "cam inlet phase";
*-}

*-dd_cam.CAM_Edge_Data[2]{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "haha3";
*-  variable_location.symbol = dd_cam.CAM_Edge_Data[2];
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "0.023437500000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "cam inlet phase";
*-}

*-dd_cam.CAM_Edge_Data[3]{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "haha4";
*-  variable_location.symbol = dd_cam.CAM_Edge_Data[3];
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "0.023437500000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "cam inlet phase";
*-}

*-dd_crank.CRANK_Error_Count_More{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKERRTM";
*-  variable_location.symbol = dd_crank.CRANK_Error_Count_More;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.000000000000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "crank 58x diagnose more tooth counter";
*-}

*-dd_crank.CRANK_Error_Count_Less{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKERRTL";
*-  variable_location.symbol = dd_crank.CRANK_Error_Count_Less;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.000000000000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "crank 58x diagnose less tooth counter";
*-}

*-dd_crank.CRANK_Error_Count_More_Max{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKERRTMM";
*-  variable_location.symbol = dd_crank.CRANK_Error_Count_More_Max;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.000000000000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "crank 58x diagnose more tooth counter max";
*-}

*-dd_crank.CRANK_Error_Count_Less_Max{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKERRTLM";
*-  variable_location.symbol = dd_crank.CRANK_Error_Count_Less_Max;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.000000000000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "crank 58x diagnose less tooth counter max";
*-}

*-dd_crank.CRANK_GapConfirm_Monitor_Count{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKGAPMC";
*-  variable_location.symbol = dd_crank.CRANK_GapConfirm_Monitor_Count;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.000000000000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "crank gap diagnose count ";
*-}

*-dd_crank.CRANK_Teeth_In_Syn_Event_COUNT{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CTINSECNT";
*-  variable_location.symbol = dd_crank.CRANK_Teeth_In_Syn_Event_COUNT;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.000000000000";
*-  ds_const_b               = "0.000000000000";
*-  description              = "tooth between cylider event, this var can monitor syn schedule";
*-}

*-dd_crank.CRANK_Internal_State.U32{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_STATE";
*-  variable_location.symbol = CRANK_Internal_State.U32;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x00{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_SYN";
*-  variable_location.symbol = CRANK_Internal_State.F.sync_occurred;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, sync occured";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x01{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_FRTSYN";
*-  variable_location.symbol = CRANK_Internal_State.F.first_sync_occurred;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, first sync occured";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x02{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_SYNERR";
*-  variable_location.symbol = CRANK_Internal_State.F.sync_error_in_progress;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, sync error in progress";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x03{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_FRTCYL";
*-  variable_location.symbol = CRANK_Internal_State.F.first_cylinder_event_occured;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, first cylinder event occured";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x05{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_FTREN";
*-  variable_location.symbol = CRANK_Internal_State.F.filter_enabled;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, crank tooth filter enable, means filter in progress";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x06{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_RRBYPF";
*-  variable_location.symbol = CRANK_Internal_State.F.run_reset_bypass_filter;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, run_reset_bypass_filter flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x07{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_SYNSTD";
*-  variable_location.symbol = CRANK_Internal_State.F.sync_started;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, sync started";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x08{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_VLDTTH";
*-  variable_location.symbol = CRANK_Internal_State.F.valid_tooth;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, valid tooth flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x09{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_RSYNIP";
*-  variable_location.symbol = CRANK_Internal_State.F.resync_attempt_in_prog;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, resync_attempt_in_prog flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x10{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_ENGTUN";
*-  variable_location.symbol = CRANK_Internal_State.F.engine_turning;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, engine turning flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x12{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_DYNSCH";
*-  variable_location.symbol = CRANK_Internal_State.F.using_dynamic_scheduler;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, using_dynamic_scheduler flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x13{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_STLDET";
*-  variable_location.symbol = CRANK_Internal_State.F.stall_detected;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, stall detected flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x14{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_CAMBP";
*-  variable_location.symbol = CRANK_Internal_State.F.cam_backup;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, cam_backup flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x15{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_TCAMBP";
*-  variable_location.symbol = CRANK_Internal_State.F.transition_to_cam_backup;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, transition_to_cam_backup flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x23{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_FATSYN";
*-  variable_location.symbol = CRANK_Internal_State.F.fast_sync_occurred;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, fast_sync_occurred flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x30{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_FRTREV";
*-  variable_location.symbol = CRANK_Internal_State.F.sync_first_revolution;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, sync_first_revolution flag";
*-}

*-dd_crank.CRANK_Internal_State_plus_0x31{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRK_SECREV";
*-  variable_location.symbol = CRANK_Internal_State.F.sync_second_revolution;
*-  ds_scaling_unit          = "boolean";
*-  ds_precision             = "1.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "dd crank internal state, sync_second_revolution flag";
*-}

*-dd_cam.CAM_Crank_Number_Gaps_Detected{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKGAPCNT";
*-  variable_location.symbol = dd_cam.CAM_Crank_Number_Gaps_Detected;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = "crank gaps detected in this crank cycle, updated in cam update event";
*-}

*-dd_cam.CAM_Stuck{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CAMSTUCK";
*-  variable_location.symbol = dd_cam.CAM_Stuck;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = " CAM sensor1 and sensor2 stuck state ";
*-}

*-dd_crank.CRANK_Cylinder_ID{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRANKCYLID";
*-  variable_location.symbol = dd_crank.CRANK_Cylinder_ID;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = " crank lld cylinder id. ";
*-}

*-dd_crank.CRANK_FS_Pulse_Count{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKFSPCNT";
*-  variable_location.symbol = dd_crank.CRANK_FS_Pulse_Count;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = " crank fast startup pulse count ";
*-}

*-dd_crank.CRANK_FS_State{
*-  OBJECTS_CLASS: parameter_es_class;
*-  label                    = "CRKFSSTAT";
*-  variable_location.symbol = dd_crank.CRANK_FS_State;
*-  ds_scaling_unit          = "count";
*-  ds_precision             = "2.0";
*-  ds_scaling_mode          = "Ax + B";
*-  ds_const_a               = "1.0";
*-  ds_const_b               = "0.000000000000";
*-  description              = " crank fast startup machine state";
*-}

/******************************************************************************/
/*                                                                            */
/* Revision History:                                                          */
/*                                                                            */
/* Rev.   DDMMYY  user id      Description                                    */
/* ------ ------  -------      ---------------------------------------------- */
/*                                                                            */
/******************************************************************************/
